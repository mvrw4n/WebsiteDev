# Generated by Django 5.1.7 on 2025-04-04 14:43

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('is_active', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('activation_code', models.CharField(blank=True, max_length=6, null=True)),
                ('stripe_customer_id', models.CharField(blank=True, max_length=100, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Interaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('response', models.TextField()),
                ('structure', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AIAction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_type', models.CharField(choices=[('serp_scraping', 'SERP Scraping'), ('linkedin_scraping', 'LinkedIn Scraping'), ('dropcontact_enrichment', 'Dropcontact Enrichment'), ('custom_scraping', 'Custom Scraping')], max_length=50)),
                ('parameters', models.JSONField()),
                ('status', models.CharField(default='pending', max_length=20)),
                ('result', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('interaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.interaction')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PromptLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prompt', models.TextField()),
                ('response', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('interaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.interaction')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ScrapingStructure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('entity_type', models.CharField(choices=[('mairie', 'Mairie'), ('entreprise', 'Entreprise'), ('b2b_lead', 'B2B Lead'), ('custom', 'Structure personnalisée')], max_length=20)),
                ('structure', models.JSONField()),
                ('is_active', models.BooleanField(default=True)),
                ('scraping_strategy', models.CharField(default='custom_scraping', max_length=100)),
                ('leads_target_per_day', models.IntegerField(default=10)),
                ('leads_extracted_today', models.IntegerField(default=0)),
                ('total_leads_extracted', models.IntegerField(default=0)),
                ('last_extraction_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scraping_structures', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('user', 'name')},
            },
        ),
        migrations.CreateModel(
            name='ScrapingJob',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('search_query', models.CharField(blank=True, max_length=255)),
                ('leads_allocated', models.PositiveIntegerField(default=10)),
                ('leads_found', models.PositiveIntegerField(default=0)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('initializing', 'Initializing'), ('running', 'Running'), ('paused', 'Paused'), ('completed', 'Completed'), ('failed', 'Failed'), ('stopped', 'Stopped')], default='pending', max_length=20)),
                ('task_id', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scraping_jobs', to=settings.AUTH_USER_MODEL)),
                ('structure', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='jobs', to='core.scrapingstructure')),
            ],
        ),
        migrations.CreateModel(
            name='ScrapingTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_id', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('initializing', 'Initializing'), ('running', 'Running'), ('paused', 'Paused'), ('completed', 'Completed'), ('failed', 'Failed'), ('stopped', 'Stopped')], default='pending', max_length=20)),
                ('current_step', models.CharField(blank=True, max_length=100, null=True)),
                ('pages_explored', models.IntegerField(default=0)),
                ('leads_found', models.IntegerField(default=0)),
                ('unique_leads', models.IntegerField(default=0)),
                ('start_time', models.DateTimeField(auto_now_add=True)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('completion_time', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='core_tasks', to='core.scrapingjob')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('free', 'Wizzy Free'), ('classic', 'Wizzy Classique'), ('premium', 'Wizzy Premium'), ('lifetime', 'Wizzy Lifetime')], default='free', max_length=20)),
                ('leads_quota', models.IntegerField(default=5)),
                ('leads_used', models.IntegerField(default=0)),
                ('unlimited_leads', models.BooleanField(default=False)),
                ('trial_expiration', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('user_details', models.JSONField(blank=True, default=dict, help_text="Informations enrichies sur l'utilisateur et son secteur d'activité", null=True)),
                ('last_lead_reset', models.DateTimeField(default=django.utils.timezone.now)),
                ('can_use_ai_chat', models.BooleanField(default=True)),
                ('can_use_advanced_scraping', models.BooleanField(default=False)),
                ('can_use_personalized_messages', models.BooleanField(default=False)),
                ('has_closer_team', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_profiles',
            },
        ),
    ]
